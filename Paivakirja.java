/*
 *  Tekijä: Jari Hiltunen, Hanko, Finland.
 *  Location: KO19LU (maidenhead).
 *  Free to reuse/distribute with written permission by the author.
 */
package ruokapaivakirja;


import java.util.Date;
import java.util.Objects;
import javax.swing.JOptionPane;
// Tuodaan linked listat. */
import static ruokapaivakirja.Ruokapaivakirja.henkilot;
import static ruokapaivakirja.Ruokapaivakirja.henkilotietokanta;
import static ruokapaivakirja.Ruokapaivakirja.tapahtumat;
import static ruokapaivakirja.Ruokapaivakirja.tapahtumatietokanta;
import static ruokapaivakirja.Ruokapaivakirja.tuotetietokanta;
import static ruokapaivakirja.Ruokapaivakirja.tuotteet;
/** Päiväkirjakehys, jolla pidetään yllä ruokapäiväkirjaa. */

/**
 * Tekijä: @author Jari Hiltunen
 * Versio: @version 1.0a
 * Lisätään ja muokataan ruokapäiväkirjaa. Tässä on ideana lukea viivakoodi laitteella
 * muistiin ja käsitellä sitä viivakoodilähtöisesti.
 */
public class Paivakirja extends javax.swing.JFrame {
// Globaalit - Käytetään useissa metodeissa. */
public static String nimiApu;
public static Integer henkiloNumeroApu=1;
public static String tuoteNimiApu;
public static Long gtinApu;
public static Double syotyMaara;
public static Double uusiPaino;
public static Integer klikkauksiaEteen=1; //yleiskäyttöinen action listenerin ulkopuolelle.
public static Integer klikkauksiaTaakse=1; //yleiskäyttöinen action listenerin ulkopuolelle.


    /**
     * Creates new form Paivakirja
     */
    public Paivakirja() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneeliHenkilo = new javax.swing.JPanel();
        comboHenkilonValinta = new javax.swing.JComboBox<>();
        labelEdellinenPaino = new javax.swing.JLabel();
        textEdellinenPaino = new javax.swing.JTextField();
        labelAloitusPaino = new javax.swing.JLabel();
        textAloitusPaino = new javax.swing.JTextField();
        paneeliUusiTapahtuma = new javax.swing.JPanel();
        buttonLueViivakoodi = new javax.swing.JButton();
        labelSyotyMaara = new javax.swing.JLabel();
        textSyotyMaara = new javax.swing.JTextField();
        labelLuettuTuote = new javax.swing.JLabel();
        textLuettuTuote = new javax.swing.JTextField();
        labelYksikko = new javax.swing.JLabel();
        textYksikko = new javax.swing.JTextField();
        buttonLisaaTapahtuma = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaTuotteet = new javax.swing.JList<>();
        labelEnergiaa = new javax.swing.JLabel();
        textEnergiaa = new javax.swing.JTextField();
        labelUusiPaino = new javax.swing.JLabel();
        textUusiMitattuPaino = new javax.swing.JTextField();
        paneeliPaivaYhteenveto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPaivaYhteenveto = new javax.swing.JList<>();
        toolbarPaivakirja = new javax.swing.JToolBar();
        buttonPalaaAlkuu = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        buttonTuotetiedot = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        buttonEdellinenVRK = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        buttonTamaPaiva = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        buttonSeuraavaVRK = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        buttonSyotaPVM = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        textPaivamaaraSyottoNaytto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ruokapäiväkirjan tapahtumat - (c) 2016 Jari Hiltunen");
        setName("kehysPaivakirja"); // NOI18N

        paneeliHenkilo.setBackground(new java.awt.Color(255, 255, 204));
        paneeliHenkilo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1. Henkilön valinta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        comboHenkilonValinta.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboHenkilonValinta.setModel(new javax.swing.DefaultComboBoxModel<>(listaaHenkiloNimet ()) );
        comboHenkilonValinta.setSelectedIndex(0);
        comboHenkilonValinta.setToolTipText("Näyttää aktiiviseksi asetetut henkilöt.");
        comboHenkilonValinta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboHenkilonValintaItemStateChanged(evt);
            }
        });
        comboHenkilonValinta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboHenkilonValintaMouseClicked(evt);
            }
        });
        comboHenkilonValinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHenkilonValintaActionPerformed(evt);
            }
        });

        labelEdellinenPaino.setText("Edellinen mitattu paino");

        textEdellinenPaino.setEditable(false);

        labelAloitusPaino.setText("Aloituspaino");

        textAloitusPaino.setEditable(false);

        javax.swing.GroupLayout paneeliHenkiloLayout = new javax.swing.GroupLayout(paneeliHenkilo);
        paneeliHenkilo.setLayout(paneeliHenkiloLayout);
        paneeliHenkiloLayout.setHorizontalGroup(
            paneeliHenkiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliHenkiloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneeliHenkiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboHenkilonValinta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(paneeliHenkiloLayout.createSequentialGroup()
                        .addComponent(labelAloitusPaino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textAloitusPaino, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelEdellinenPaino)
                        .addGap(18, 18, 18)
                        .addComponent(textEdellinenPaino, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneeliHenkiloLayout.setVerticalGroup(
            paneeliHenkiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliHenkiloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboHenkilonValinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(paneeliHenkiloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEdellinenPaino)
                    .addComponent(textEdellinenPaino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAloitusPaino)
                    .addComponent(textAloitusPaino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        paneeliUusiTapahtuma.setBackground(new java.awt.Color(204, 255, 204));
        paneeliUusiTapahtuma.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "2. Uuden tapahtuman syöttö", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 0, 51))); // NOI18N

        buttonLueViivakoodi.setText("LUE TUOTTEEN VIIVAKOODI");
        buttonLueViivakoodi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLueViivakoodiMouseClicked(evt);
            }
        });

        labelSyotyMaara.setText("Syöty määrä");

        textSyotyMaara.setEditable(false);
        textSyotyMaara.setToolTipText("Kirjoita tähän paljonko söit tuotetta. Huomaa yksikkö (älä kirjoita muuta kuin numeroita).");
        textSyotyMaara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textSyotyMaaraMouseClicked(evt);
            }
        });
        textSyotyMaara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSyotyMaaraActionPerformed(evt);
            }
        });

        labelLuettuTuote.setText("Luettu tuote");

        textLuettuTuote.setEditable(false);
        textLuettuTuote.setToolTipText("Kirjoita EAN/GTIN-koodi tai lue se lukijalla.");
        textLuettuTuote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textLuettuTuoteActionPerformed(evt);
            }
        });

        labelYksikko.setText("Yksikkö");

        textYksikko.setEditable(false);

        buttonLisaaTapahtuma.setText("LISÄÄ TAPAHTUMA");
        buttonLisaaTapahtuma.setToolTipText("Valitse ensin tuote, syötä ensin paljon söit ja paina tätä.");
        buttonLisaaTapahtuma.setEnabled(false);
        buttonLisaaTapahtuma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLisaaTapahtumaMouseClicked(evt);
            }
        });
        buttonLisaaTapahtuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLisaaTapahtumaActionPerformed(evt);
            }
        });

        listaTuotteet.setBorder(javax.swing.BorderFactory.createTitledBorder("Tuotelistaus"));
        listaTuotteet.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = listaaTuotteet();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaTuotteet.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaTuotteet.setToolTipText("Valitse listasta syömäsi tuote. Vain aktiiviset näkyvät.");
        listaTuotteet.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listaTuotteet.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaTuotteetValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaTuotteet);

        labelEnergiaa.setText("Energiaa");

        textEnergiaa.setEditable(false);

        labelUusiPaino.setText("Uusi paino");

        textUusiMitattuPaino.setEditable(false);
        textUusiMitattuPaino.setToolTipText("Kirjoita tähän mittaamasi uusi paino entisen päälle.");

        javax.swing.GroupLayout paneeliUusiTapahtumaLayout = new javax.swing.GroupLayout(paneeliUusiTapahtuma);
        paneeliUusiTapahtuma.setLayout(paneeliUusiTapahtumaLayout);
        paneeliUusiTapahtumaLayout.setHorizontalGroup(
            paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                        .addComponent(labelEnergiaa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textEnergiaa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonLisaaTapahtuma))
                    .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                        .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                                .addComponent(labelSyotyMaara)
                                .addGap(18, 18, 18)
                                .addComponent(textSyotyMaara, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelYksikko)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textYksikko, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelUusiPaino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textUusiMitattuPaino, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buttonLueViivakoodi)
                            .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                                .addComponent(labelLuettuTuote)
                                .addGap(18, 18, 18)
                                .addComponent(textLuettuTuote, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneeliUusiTapahtumaLayout.setVerticalGroup(
            paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliUusiTapahtumaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonLueViivakoodi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLuettuTuote)
                    .addComponent(textLuettuTuote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSyotyMaara)
                    .addComponent(textSyotyMaara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelYksikko)
                    .addComponent(textYksikko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUusiPaino)
                    .addComponent(textUusiMitattuPaino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneeliUusiTapahtumaLayout.createSequentialGroup()
                        .addGroup(paneeliUusiTapahtumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEnergiaa)
                            .addComponent(textEnergiaa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneeliUusiTapahtumaLayout.createSequentialGroup()
                        .addComponent(buttonLisaaTapahtuma)
                        .addContainerGap())))
        );

        paneeliPaivaYhteenveto.setBackground(new java.awt.Color(153, 204, 255));
        paneeliPaivaYhteenveto.setBorder(javax.swing.BorderFactory.createTitledBorder("Päiväyhteenveto tapahtumista"));

        listaPaivaYhteenveto.setBorder(javax.swing.BorderFactory.createTitledBorder("Syötetyt tapahtumatiedot."));
        listaPaivaYhteenveto.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = listaaTapahtumatTanaan ();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaPaivaYhteenveto);

        javax.swing.GroupLayout paneeliPaivaYhteenvetoLayout = new javax.swing.GroupLayout(paneeliPaivaYhteenveto);
        paneeliPaivaYhteenveto.setLayout(paneeliPaivaYhteenvetoLayout);
        paneeliPaivaYhteenvetoLayout.setHorizontalGroup(
            paneeliPaivaYhteenvetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliPaivaYhteenvetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneeliPaivaYhteenvetoLayout.setVerticalGroup(
            paneeliPaivaYhteenvetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneeliPaivaYhteenvetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        toolbarPaivakirja.setRollover(true);

        buttonPalaaAlkuu.setText("PERUUTA");
        buttonPalaaAlkuu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 255), null, null));
        buttonPalaaAlkuu.setFocusable(false);
        buttonPalaaAlkuu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonPalaaAlkuu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonPalaaAlkuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonPalaaAlkuuMouseClicked(evt);
            }
        });
        buttonPalaaAlkuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPalaaAlkuuActionPerformed(evt);
            }
        });
        toolbarPaivakirja.add(buttonPalaaAlkuu);
        toolbarPaivakirja.add(jSeparator1);

        buttonTuotetiedot.setText("TUOTETIEDOT");
        buttonTuotetiedot.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonTuotetiedot.setFocusable(false);
        buttonTuotetiedot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonTuotetiedot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonTuotetiedot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTuotetiedotMouseClicked(evt);
            }
        });
        toolbarPaivakirja.add(buttonTuotetiedot);
        toolbarPaivakirja.add(jSeparator2);

        buttonEdellinenVRK.setText("<-EDELLINEN VRK");
        buttonEdellinenVRK.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonEdellinenVRK.setFocusable(false);
        buttonEdellinenVRK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonEdellinenVRK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonEdellinenVRK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEdellinenVRKMouseClicked(evt);
            }
        });
        toolbarPaivakirja.add(buttonEdellinenVRK);
        toolbarPaivakirja.add(jSeparator4);

        buttonTamaPaiva.setText("TÄMÄ PÄIVÄ");
        buttonTamaPaiva.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonTamaPaiva.setFocusable(false);
        buttonTamaPaiva.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonTamaPaiva.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonTamaPaiva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTamaPaivaMouseClicked(evt);
            }
        });
        toolbarPaivakirja.add(buttonTamaPaiva);
        toolbarPaivakirja.add(jSeparator7);

        buttonSeuraavaVRK.setText("SEURAAVA VRK ->");
        buttonSeuraavaVRK.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonSeuraavaVRK.setFocusable(false);
        buttonSeuraavaVRK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonSeuraavaVRK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonSeuraavaVRK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSeuraavaVRKMouseClicked(evt);
            }
        });
        toolbarPaivakirja.add(buttonSeuraavaVRK);
        toolbarPaivakirja.add(jSeparator5);

        buttonSyotaPVM.setText("SYÖTÄ PVM");
        buttonSyotaPVM.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        buttonSyotaPVM.setFocusable(false);
        buttonSyotaPVM.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonSyotaPVM.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonSyotaPVM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSyotaPVMMouseClicked(evt);
            }
        });
        toolbarPaivakirja.add(buttonSyotaPVM);
        toolbarPaivakirja.add(jSeparator6);
        toolbarPaivakirja.add(jSeparator3);

        textPaivamaaraSyottoNaytto.setBackground(new java.awt.Color(204, 204, 255));
        textPaivamaaraSyottoNaytto.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        textPaivamaaraSyottoNaytto.setToolTipText("Syötä päivämäärä muodossa pp.kk.vvvv");
        textPaivamaaraSyottoNaytto.setBorder(javax.swing.BorderFactory.createTitledBorder("Päivämäärä"));
        textPaivamaaraSyottoNaytto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPaivamaaraSyottoNayttoActionPerformed(evt);
            }
        });
        toolbarPaivakirja.add(textPaivamaaraSyottoNaytto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolbarPaivakirja, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(paneeliHenkilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(paneeliUusiTapahtuma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paneeliPaivaYhteenveto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toolbarPaivakirja, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(paneeliHenkilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paneeliUusiTapahtuma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(paneeliPaivaYhteenveto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboHenkilonValintaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboHenkilonValintaItemStateChanged
        /** Tyhjennetään edellinen paino */
        textEdellinenPaino.setText("0.0");
         /** Valitaan henkilö. */
        String valinta = String.valueOf(comboHenkilonValinta.getSelectedItem()); 
         /** Pilkotaan teksti numeroon ja nimeen takaisin ja otetaan white space pois. */
        String[] valintaApu=valinta.split("\\s*-\\s*");
         /** valintaApu[0] = henkilönumero ja [1] on nimi. */         
        nimiApu=valintaApu[1]; // globaaliin muuttujaan
        henkiloNumeroApu=Integer.parseInt(valintaApu[0]); //globaaliin muuttujaan
        /** Pävitetään kenttään aloituspaino. */
        for (Henkilo e : henkilot) {
          /** Tarkistetaan löytyykö syötetty henkilön painoa. */    
          if (Objects.equals(e.getHenkiloNumero(), henkiloNumeroApu)) {
                // haetaan kenttiin tiedot
                textAloitusPaino.setText(String.valueOf(e.getPaino()));
             } //endif
           } //end Tuote for ja jos tänne päästiin, kaikki ok
        /** Pävitetään kenttään edellinen paino. */
        for (Tapahtuma e : tapahtumat) {
          /** Tarkistetaan löytyykö syötetty henkilön painoa. */    
          if (Objects.equals(e.getHenkilonumero(), henkiloNumeroApu)) {
                // haetaan kenttiin tiedot
                textEdellinenPaino.setText(String.valueOf(e.getPaino()));
                textUusiMitattuPaino.setText(String.valueOf(e.getPaino()));
             } //endif
           } //end Tuote for ja jos tänne päästiin, kaikki ok
        /** Päivitetään päivätapahtumat. */
        listaPaivaYhteenveto.setListData(listaaTapahtumatTanaan ());
        /** Sallitaan syödyn määrän täyttäminen koska henkilö valittu */
        textSyotyMaara.setEditable(true);
        textUusiMitattuPaino.setEditable(true);
    }//GEN-LAST:event_comboHenkilonValintaItemStateChanged

    private void listaTuotteetValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaTuotteetValueChanged
        //** Valitaan tuote listasta. */
        String valinta = String.valueOf(listaTuotteet.getSelectedValue()); 
        /** Pilkotaan teksti numeroon ja nimeen takaisin ja otetaan white space pois. */
        String[] valintaApu=valinta.split("\\s*-\\s*");
         /** valintaApu[0] = gtin/ean koodi ja [1] on tuotteen nimi. */         
        tuoteNimiApu=valintaApu[1]; // globaaliin muuttujaan
        gtinApu=Long.parseLong(valintaApu[0]); //globaaliin muuttujaan
        /** Asetetaan yksikkö ja energia näkyviin */
        for (Tuote e : tuotteet) {
          /** Tarkistetaan löytyykö syötetty gtin. */    
          if (Objects.equals(e.getGtin(), gtinApu)) {
                // haetaan kenttiin tiedot
               textYksikko.setText(e.getYksikko());
               textEnergiaa.setText(String.valueOf(e.getEnergia()));
             } //endif
           } //end Tuote for ja jos tänne päästiin, kaikki ok
        /** Asetetaan lisää nappula näkyviin.*/
        if (textSyotyMaara.getText().length()>0) {
             buttonLisaaTapahtuma.setEnabled(true);
        } //if
       
    }//GEN-LAST:event_listaTuotteetValueChanged

    private void buttonLisaaTapahtumaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLisaaTapahtumaMouseClicked
       /** Lisätään tapahtuma */
       /** Syöty määrä. */
        try {
           syotyMaara = Double.parseDouble(textSyotyMaara.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Syöty määrä tulee olla desimaalipisteellä erotettu luku.",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
    }//GEN-LAST:event_buttonLisaaTapahtumaMouseClicked

    private void textSyotyMaaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textSyotyMaaraMouseClicked
        /** Asetetaan lisää nappula näkyviin.*/
       // buttonLisaaTapahtuma.setEnabled(true);
       
    }//GEN-LAST:event_textSyotyMaaraMouseClicked

    private void textSyotyMaaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSyotyMaaraActionPerformed
        /** Asetetaan lisää nappula näkyviin.*/
       // buttonLisaaTapahtuma.setEnabled(true);
           
    }//GEN-LAST:event_textSyotyMaaraActionPerformed

    private void buttonLisaaTapahtumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLisaaTapahtumaActionPerformed
        /** Tarvittavat tiedot olemassa, lisätään tapahtuma. */
      Date pvm = new Date();
      Double syotyMaara = Double.parseDouble(textSyotyMaara.getText());
      /** Uusi paino. */
        try {
          uusiPaino = Double.parseDouble(textUusiMitattuPaino.getText());
        } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Painon tulee olla desimaalipisteellä erotettu luku.",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
       // uusi paino astetttu ja käytetään tapahtuman merkintään 
      // ----- asetukset ovat valmiita olion luomista ja tallennusta varten ---//
      /** Luodaan uusi objekti pvm, gtin, hlönro, syötymäärä, uusipaino ja huomautus.*/
      tapahtumat.add(new Tapahtuma(pvm, gtinApu, 
              henkiloNumeroApu, syotyMaara, uusiPaino, ""));
      /** Tallennetaan tiedot levylle. */
       Levytoiminta.tallenna(tapahtumat, tapahtumatietokanta);
       JOptionPane.showMessageDialog(null,
           "Tiedot lisätty ja tallennettu",
                       "Tiedot tallennettu",
                        JOptionPane.INFORMATION_MESSAGE); 
       // Pävitietään näyttö //
       /** Päivitetään päivätapahtumat. */
        listaPaivaYhteenveto.setListData(listaaTapahtumatTanaan ());
       
    }//GEN-LAST:event_buttonLisaaTapahtumaActionPerformed

    private void comboHenkilonValintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHenkilonValintaActionPerformed
        /** Valitaan valinnan ensimmäinen henkilö. Tässä varaus oletushenkilön valintaa */
        // Mikäli haluat tuottaa sovelluksen, jossa on oletuskäyttäjä esim.
        // viimeisin käyttäjä, niin käytätä tätä hyväksesi //
       // -->  comboHenkilonValinta.setSelectedIndex(0);
        textSyotyMaara.setEnabled(true);
        // Näytetään tämä päivä tapahtumissa //
        textPaivamaaraSyottoNaytto.setText(PaivaLaskuri.tamaPaiva());
        // Luetaan mahdollisesti muuttuneet tuotetiedot muistiin //
        tuotteet=Levytoiminta.lueTuotteet(tuotetietokanta); 
        tapahtumat=Levytoiminta.lueTapahtumat(tapahtumatietokanta); 
        henkilot=Levytoiminta.lueHenkilot(henkilotietokanta);  
    }//GEN-LAST:event_comboHenkilonValintaActionPerformed

    private void buttonLueViivakoodiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLueViivakoodiMouseClicked
        /** Aktivoidaan kenttä johon voi joko kirjoittaa tai sitten tuottaa
         * GTIN/EAN koodin viivakoodista, RFID:stä tai esim. kännykän kameralla. */
      textLuettuTuote.setEnabled(true);
      textLuettuTuote.setEditable(true);
      textSyotyMaara.setEnabled(false);
        
    }//GEN-LAST:event_buttonLueViivakoodiMouseClicked

    private void textLuettuTuoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textLuettuTuoteActionPerformed
        /** Enterin jälkeen tarkistetaan numeroiden kelpaavuus ja etsitään tuote. */
        boolean arvoOK = false;
        if (textLuettuTuote.getText().length()!=13) {
           JOptionPane.showMessageDialog(null,
           "EAN/GTIN-numeron tulee olla 13 merkkiä pitkä.",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //if
        else {
      try {
          gtinApu= Long.parseLong(textLuettuTuote.getText());
          arvoOK=true;
        } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "EAN/GTIN-numeron tulee olla numeroita (13).",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
        } //else
       // GTIN määritys ok, jatkateaan // 
       
      if (arvoOK==true) {
       
       // GTIN/EAN ok, tarkistetaan löytyykö se tietokannasta //
      boolean tuoteLoytyi=false;
      
       for (Tuote e: tuotteet) {
          // Muista AINA verrata null-safe metodilla, ei == metodilla! //
         if (Objects.equals(e.getGtin(), gtinApu)) {
             // Esitetään se tuotelistauksessa //
             int listanKoko = listaTuotteet.getModel().getSize();
               for (int i = 0; i < listanKoko; i++) {
               // tuoteValittuun tulee listan elementti //    
               // Estetään nullpointerit  testaamalla//
               String tuoteValittu="123";
               try
                 {  tuoteValittu = (listaTuotteet.getModel().getElementAt(i).toString()); }
               catch (NullPointerException nullPointer) { }
               // Puretaan valittu objekti merkkijonoiksi
               /** Pilkotaan teksti numeroon ja nimeen takaisin ja otetaan white space pois. */
                 String[] valintaApu=tuoteValittu.split("\\s*-\\s*");
                /** valintaApu[0] = gtin/ean koodi ja [1] on tuotteen nimi. */         
                    Long gtinApu2=Long.parseLong(valintaApu[0]);
                /** Kohdistetaan listan ja valitun rivit. */    
                 if (Objects.equals(gtinApu2, gtinApu)) {
                     // Löytyi myös listauksessta //
                     // tuote löytyi //
                      tuoteLoytyi=true;
                     listaTuotteet.setSelectedIndex(i);
                     textSyotyMaara.setEnabled(true);
                     buttonLisaaTapahtuma.setEnabled(true);
                 } //if korostamiselle listassa
             } //for listan indeksille
              
         } else { } //tavallaan turha asetus 
      } //for
      
      if (tuoteLoytyi == false) {       
      // mitä tehdään kun ei löytynyt
                int vastaus = JOptionPane.showConfirmDialog(null, 
               "Tuotetta ei löytynyt (tai on inkatiivinen).\nLisätäänkö tuote?",null, JOptionPane.YES_NO_OPTION);
                 if(vastaus == JOptionPane.YES_OPTION) {
                     // näytetään Tuote-sivu
                     new Tuotetiedot().setVisible(true);
                     //suljetaan tämä ruutu//
                      dispose();
                 } else { //ei lisätä, eli nollataan tilanne 
                 }
      } //ifei lötynyt
       
       // Lopuksi //
      textLuettuTuote.setEnabled(false);
      textLuettuTuote.setEditable(false);
      textSyotyMaara.setEnabled(true);
      } //if
        
    }//GEN-LAST:event_textLuettuTuoteActionPerformed

    private void buttonPalaaAlkuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPalaaAlkuuMouseClicked
        /** Palataan yhteenvetoon. */
        dispose();
        new Yhteenveto().setVisible(true);
        
    }//GEN-LAST:event_buttonPalaaAlkuuMouseClicked

    private void buttonTuotetiedotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTuotetiedotMouseClicked
       dispose();
       new Tuotetiedot().setVisible(true);
    }//GEN-LAST:event_buttonTuotetiedotMouseClicked

    private void buttonEdellinenVRKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEdellinenVRKMouseClicked
      Date pvm = new Date();
       String uusiPVM = PaivaLaskuri.poistaPaivia(pvm, klikkauksiaTaakse);
       listaPaivaYhteenveto.setListData(listaaTapahtumatValittu(uusiPVM));
      textPaivamaaraSyottoNaytto.setText(uusiPVM);
      klikkauksiaTaakse++;
    }//GEN-LAST:event_buttonEdellinenVRKMouseClicked

    private void buttonSeuraavaVRKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSeuraavaVRKMouseClicked
     Date pvm = new Date();
     String uusiPVM = PaivaLaskuri.lisaaPaivia(pvm, klikkauksiaEteen);
      listaPaivaYhteenveto.setListData(listaaTapahtumatValittu(uusiPVM));
      textPaivamaaraSyottoNaytto.setText(uusiPVM);
      klikkauksiaEteen++;
               
    }//GEN-LAST:event_buttonSeuraavaVRKMouseClicked

    private void buttonSyotaPVMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSyotaPVMMouseClicked
         // Voisi toteuttaa myös DatePickerillä //
         // Näytetään tämä päivä tapahtumissa //
        textPaivamaaraSyottoNaytto.setText(PaivaLaskuri.tamaPaiva());
          JOptionPane.showMessageDialog(null,
           "Voit syöttää halutun päivämäärän suoraan "
                   + "\npäivämääräkenttään muodossa pp.kk.vvvv  "
                   + "\nPaina lopuksi enteriä.",
                       "Tiedonsyöttöohje",
                        JOptionPane.INFORMATION_MESSAGE);
         textPaivamaaraSyottoNaytto.selectAll();
          
        
    }//GEN-LAST:event_buttonSyotaPVMMouseClicked

    private void buttonTamaPaivaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTamaPaivaMouseClicked
     // Nollataan klikettimet //    
     klikkauksiaEteen=1;
     klikkauksiaTaakse=1;
    // Tuotetaan tämän päivän listaus //
     listaPaivaYhteenveto.setListData(listaaTapahtumatTanaan ());
     // Näytetään tämä päivä tapahtumissa //
    textPaivamaaraSyottoNaytto.setText(PaivaLaskuri.tamaPaiva());
        
    }//GEN-LAST:event_buttonTamaPaivaMouseClicked

    private void textPaivamaaraSyottoNayttoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPaivamaaraSyottoNayttoActionPerformed
        // Tarkistetaan syötetyn tiedon oikeellisuus //
        String syotettyPVM= textPaivamaaraSyottoNaytto.getText();
        if(syotettyPVM!=null && !syotettyPVM.isEmpty() && syotettyPVM.length()==10) {
             listaPaivaYhteenveto.setListData(listaaTapahtumatValittu(syotettyPVM));
        } //if
        else {
         JOptionPane.showMessageDialog(null,
           "Päivämäärän tulee olla muodossa pp.kk.vvvv !",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);   
        }
        
    }//GEN-LAST:event_textPaivamaaraSyottoNayttoActionPerformed

    private void comboHenkilonValintaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboHenkilonValintaMouseClicked
        
        
    }//GEN-LAST:event_comboHenkilonValintaMouseClicked

    private void buttonPalaaAlkuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPalaaAlkuuActionPerformed
        dispose();
    }//GEN-LAST:event_buttonPalaaAlkuuActionPerformed

   // Metodit //
  /**  @return Metodi listaa aktiivisten henkilönimen ja numeron.  */
    public static String[] listaaHenkiloNimet () {
     int laskuri=0; //laskuri aktiivisia henkilöitä varten //   
     String[] henkiloNimet = new String[henkilot.size()];   
     for (int i=0;i<henkilot.size();i++) {
       if (henkilot.get(i).getOnkoAktiivinen()==true) {
           // Huomaa, että - merkkiä käytetään leikkaamaan merkkijono kahdeksi eri muuttujaksi, älä sotke! //
          henkiloNimet[laskuri] = (henkilot.get(i).getHenkiloNumero()+" - "+(henkilot.get(i).getNimi()));
          laskuri++;
       } //if   
     } //for
     // kopioidaan uuteen tauluun ja tällä estetään tyhjien nimien ilmestyminen listaan//
     String[] henkiloNimetPalauta = new String[laskuri];   
     for (int i=0;i<laskuri;i++) {
         henkiloNimetPalauta[i]=henkiloNimet[i];
     } //for
       return henkiloNimetPalauta;  
     } //listaaHenkilot
    
    /**  @return Metodi listaa aktiivisten gtin:n ja tuotenimiä.  */
    public static String[] listaaTuotteet () {
        int laskuri=0; //laskuri aktiivisia tuotteita varten //   
     String[] tuoteNimet = new String[tuotteet.size()];   
     for (int i=0;i<tuotteet.size();i++) {
        if (tuotteet.get(i).getAktivointi()==true) {
           // Huomaa, että - merkkiä käytetään leikkaamaan merkkijono kahdeksi eri muuttujaksi, älä sotke! //
         tuoteNimet[laskuri] = (tuotteet.get(i).getGtin())+" - "+(tuotteet.get(i).getTuoteNimi());
         laskuri++;
        } //if
     } //for
    return tuoteNimet;     
        } //listaaTuotteet
    
        
    /**  @return Metodi listaa tämän päivän tapahtumat.  */
    public static String[] listaaTapahtumatTanaan () {
       String paivamaara = PaivaLaskuri.tamaPaiva();;  
       // Henkilön numero on muuttujassa henkiloNumeroApu
       String[] tapahtumatTanaan = new String[tapahtumat.size()];
        int tapahtuma=0; //laskuri tapahtumia varten
        String tuote=""; // tuonenimen tuottamista varten
        // Ensimmäinen for käydään henkilönumeroittain läpi //
        // metodi tulee olemaan hidas kun tietokanta kasvaa isoksi //
        // Käytä aina ns. null-safe metodia! //
        for (Tapahtuma e: tapahtumat) {
          if (Objects.equals(e.getHenkilonumero(), henkiloNumeroApu) &&
                  Objects.equals(e.getPaivamaara(), paivamaara))  {
              // henkilö ja päivämäärä sattuu kohdalleen, ratkaistaan tuotenimi //
               for (Tuote o: tuotteet) {
                 // Käytä aina ns. null-safe metodia! //
                  if (Objects.equals(e.getGtin(), o.getGtin())) {
                      tuote = o.getTuoteNimi();;   
                 } //ifosu
              } //forTuote
                   tapahtumatTanaan[tapahtuma] = e.getKelloaika() + " / "
                   + tuote + " (Syöty:"+ e.getSyotymaara()+" Paino:"+e.getPaino()+").";
            tapahtuma++;
            } // if
          } //for objects henkilo
        // Jos ei ole tapahtumia ,kerrotaan siitä //
        if (tapahtuma==0) {tapahtumatTanaan[0]="Ei tapahtumia.";}
       return tapahtumatTanaan; 
     } //listaatapahtumat
    
    
    /**
     * @param inPaivamaara päivämäärä, jolta tapahtumia katsellaan.
     * @return Metodi palauttaa  valitun päivän tapahtumat.  */
    // Alkuehto: päivämäärä OLTAVA pp.kk.vvvv-muodossa //
    public static String[] listaaTapahtumatValittu (String inPaivamaara) {
        String paivamaara = inPaivamaara;  
       // Henkilön numero on muuttujassa henkiloNumeroApu
       String[] tapahtumatTanaan = new String[tapahtumat.size()];
        int tapahtuma=0; //laskuri tapahtumia varten
        String tuote=""; // tuonenimen tuottamista varten
        // Ensimmäinen for käydään henkilönumeroittain läpi //
        // metodi tulee olemaan hidas kun tietokanta kasvaa isoksi //
        // Käytä aina ns. null-safe metodia! //
        for (Tapahtuma e: tapahtumat) {
          if (Objects.equals(e.getHenkilonumero(), henkiloNumeroApu) &&
                  Objects.equals(e.getPaivamaara(), paivamaara))  {
              // henkilö ja päivämäärä sattuu kohdalleen, ratkaistaan tuotenimi //
               for (Tuote o: tuotteet) {
                 // Käytä aina ns. null-safe metodia! //
                  if (Objects.equals(e.getGtin(), o.getGtin())) {
                      tuote = o.getTuoteNimi();;   
                 } //ifosu
              } //forTuote
                   tapahtumatTanaan[tapahtuma] = "Klo: " + e.getKelloaika() + " "
                   + tuote + " (Syöty:"+ e.getSyotymaara()+" Paino:"+e.getPaino()+").";
            tapahtuma++;
            } // if
          } //for objects henkilo
        // Jos ei ole tapahtumia ,kerrotaan siitä //
        if (tapahtuma==0) {tapahtumatTanaan[0]="Ei tapahtumia.";}
       return tapahtumatTanaan; 
     } //listaatapahtumat
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEdellinenVRK;
    private javax.swing.JButton buttonLisaaTapahtuma;
    private javax.swing.JButton buttonLueViivakoodi;
    private javax.swing.JButton buttonPalaaAlkuu;
    private javax.swing.JButton buttonSeuraavaVRK;
    private javax.swing.JButton buttonSyotaPVM;
    private javax.swing.JButton buttonTamaPaiva;
    private javax.swing.JButton buttonTuotetiedot;
    private javax.swing.JComboBox<String> comboHenkilonValinta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JLabel labelAloitusPaino;
    private javax.swing.JLabel labelEdellinenPaino;
    private javax.swing.JLabel labelEnergiaa;
    private javax.swing.JLabel labelLuettuTuote;
    private javax.swing.JLabel labelSyotyMaara;
    private javax.swing.JLabel labelUusiPaino;
    private javax.swing.JLabel labelYksikko;
    private javax.swing.JList<String> listaPaivaYhteenveto;
    private javax.swing.JList<String> listaTuotteet;
    private javax.swing.JPanel paneeliHenkilo;
    private javax.swing.JPanel paneeliPaivaYhteenveto;
    private javax.swing.JPanel paneeliUusiTapahtuma;
    private javax.swing.JTextField textAloitusPaino;
    private javax.swing.JTextField textEdellinenPaino;
    private javax.swing.JTextField textEnergiaa;
    private javax.swing.JTextField textLuettuTuote;
    private javax.swing.JTextField textPaivamaaraSyottoNaytto;
    private javax.swing.JTextField textSyotyMaara;
    private javax.swing.JTextField textUusiMitattuPaino;
    private javax.swing.JTextField textYksikko;
    private javax.swing.JToolBar toolbarPaivakirja;
    // End of variables declaration//GEN-END:variables
}

/*
 *  Tekijä: Jari Hiltunen, Hanko, Finland.
 *  Location: KO19LU (maidenhead).
 *  Free to reuse/distribute with written permission by the author.
 */
package ruokapaivakirja;
/**
 * Tekijä: @author Jari Hiltunen
 * Versio: @version 1.0a
 * Lisätään ja muokataan henkilötietoja. 
 */

import java.awt.Color;
import static ruokapaivakirja.Ruokapaivakirja.henkilot;
import static ruokapaivakirja.Ruokapaivakirja.henkilotietokanta;
import java.util.*;
import javax.swing.JOptionPane;
/** Lisätään ja muokataan henkilötietoja. */    

public class HenkiloTiedot extends javax.swing.JFrame {
//* Laskee monennettako henkilöä käsitellään, yleiskäyttöinen. */    
private int selausHenkilo=1;    

    /**
     * Creates new form HenkiloTiedot
     */
    public HenkiloTiedot() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolbarHenkiloTiedot = new javax.swing.JToolBar();
        nappainPeruuta = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        nappainMuokkaa = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        buttonHenkiloEdellinen = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        buttonHenkiloSeuraava = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        buttonHenkiloUusi = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        henkiloNappainOK = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        henkiloNappainMuutosOK = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        paneeliHenkiloTietojenMuokkaus = new javax.swing.JPanel();
        labelHenkilonNimi = new javax.swing.JLabel();
        kenttaHenkilonNimi = new javax.swing.JTextField();
        labelHenkilonIka = new javax.swing.JLabel();
        textHenkiloIka = new javax.swing.JTextField();
        labelHenkiloSukupuoli = new javax.swing.JLabel();
        textHenkiloSukupuoli = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textHenkiloPaino = new javax.swing.JTextField();
        labelHenkiloPituus = new javax.swing.JLabel();
        textHenkiloPituus = new javax.swing.JTextField();
        labelHenkiloNumero = new javax.swing.JLabel();
        textHenkiloNumero = new javax.swing.JTextField();
        labelHenkiloHuomautus = new javax.swing.JLabel();
        textHenkiloHuomautus = new javax.swing.JTextField();
        labelHenkiloAktiivisuus = new javax.swing.JLabel();
        comboHenkiloAktiivisuus = new javax.swing.JComboBox<>();
        textHenkiloAktiivisuusInfo = new javax.swing.JTextField();
        labelHenkiloEnnuste = new javax.swing.JLabel();
        kenttaHenkiloBMR = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textHenkiloKokonaisEnnuste = new javax.swing.JTextField();
        buttonHenkiloAktivoitu = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Henkilötiedot (c) 2016 Jari Hiltunen");
        setName("Henkilotietojen lisays ja poisto"); // NOI18N

        toolbarHenkiloTiedot.setRollover(true);

        nappainPeruuta.setText("PERUUTA");
        nappainPeruuta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nappainPeruuta.setFocusable(false);
        nappainPeruuta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nappainPeruuta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nappainPeruuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nappainPeruutaMouseClicked(evt);
            }
        });
        nappainPeruuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappainPeruutaActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(nappainPeruuta);
        toolbarHenkiloTiedot.add(jSeparator5);

        nappainMuokkaa.setText("MUOKKAA");
        nappainMuokkaa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nappainMuokkaa.setEnabled(false);
        nappainMuokkaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappainMuokkaaActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(nappainMuokkaa);
        toolbarHenkiloTiedot.add(jSeparator4);
        toolbarHenkiloTiedot.add(jSeparator6);

        buttonHenkiloEdellinen.setText("<-EDELLINEN");
        buttonHenkiloEdellinen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonHenkiloEdellinen.setFocusable(false);
        buttonHenkiloEdellinen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonHenkiloEdellinen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonHenkiloEdellinen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonHenkiloEdellinenMouseClicked(evt);
            }
        });
        buttonHenkiloEdellinen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHenkiloEdellinenActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(buttonHenkiloEdellinen);
        toolbarHenkiloTiedot.add(jSeparator1);

        buttonHenkiloSeuraava.setText("SEURAAVA->");
        buttonHenkiloSeuraava.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonHenkiloSeuraava.setFocusable(false);
        buttonHenkiloSeuraava.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonHenkiloSeuraava.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonHenkiloSeuraava.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonHenkiloSeuraavaMouseClicked(evt);
            }
        });
        buttonHenkiloSeuraava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHenkiloSeuraavaActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(buttonHenkiloSeuraava);
        toolbarHenkiloTiedot.add(jSeparator2);

        buttonHenkiloUusi.setText("UUSI");
        buttonHenkiloUusi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonHenkiloUusi.setFocusable(false);
        buttonHenkiloUusi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonHenkiloUusi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonHenkiloUusi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHenkiloUusiActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(buttonHenkiloUusi);
        toolbarHenkiloTiedot.add(jSeparator8);
        toolbarHenkiloTiedot.add(jSeparator9);

        henkiloNappainOK.setText("OK");
        henkiloNappainOK.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        henkiloNappainOK.setEnabled(false);
        henkiloNappainOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                henkiloNappainOKActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(henkiloNappainOK);
        toolbarHenkiloTiedot.add(jSeparator13);

        henkiloNappainMuutosOK.setText("MUUTOS OK");
        henkiloNappainMuutosOK.setToolTipText("Paina tästä kun olet tehnyt muutokset.");
        henkiloNappainMuutosOK.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        henkiloNappainMuutosOK.setEnabled(false);
        henkiloNappainMuutosOK.setFocusable(false);
        henkiloNappainMuutosOK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        henkiloNappainMuutosOK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        henkiloNappainMuutosOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                henkiloNappainMuutosOKActionPerformed(evt);
            }
        });
        toolbarHenkiloTiedot.add(henkiloNappainMuutosOK);
        toolbarHenkiloTiedot.add(jSeparator12);

        paneeliHenkiloTietojenMuokkaus.setBackground(new java.awt.Color(255, 255, 204));
        paneeliHenkiloTietojenMuokkaus.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Henkilötietojen lisääminen tai muokkaus", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 51, 51))); // NOI18N

        labelHenkilonNimi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelHenkilonNimi.setText("Henkilön nimi");

        kenttaHenkilonNimi.setEditable(false);
        kenttaHenkilonNimi.setToolTipText("Henkilon koko nimi, etunimi + sukunimi");
        kenttaHenkilonNimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kenttaHenkilonNimiActionPerformed(evt);
            }
        });

        labelHenkilonIka.setText("Ikä");

        textHenkiloIka.setEditable(false);
        textHenkiloIka.setToolTipText("Ikä vuosina");
        textHenkiloIka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textHenkiloIkaActionPerformed(evt);
            }
        });

        labelHenkiloSukupuoli.setText("Sukupuoli");

        textHenkiloSukupuoli.setEditable(false);
        textHenkiloSukupuoli.setToolTipText("Henkillön sukupuoli");

        jLabel1.setText("Paino");

        textHenkiloPaino.setEditable(false);
        textHenkiloPaino.setToolTipText("Aloituspaino kg");
        textHenkiloPaino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textHenkiloPainoActionPerformed(evt);
            }
        });

        labelHenkiloPituus.setText("Pituus");

        textHenkiloPituus.setEditable(false);
        textHenkiloPituus.setToolTipText("Pituus cm");
        textHenkiloPituus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textHenkiloPituusActionPerformed(evt);
            }
        });

        labelHenkiloNumero.setText("Henkilö#");

        textHenkiloNumero.setEditable(false);
        textHenkiloNumero.setToolTipText("Kertoo henkilönumeron.");

        labelHenkiloHuomautus.setText("Huomautus");

        textHenkiloHuomautus.setEditable(false);
        textHenkiloHuomautus.setToolTipText("Huomautuksia liittyen henkilöön");

        labelHenkiloAktiivisuus.setText("Aktiivisuus");

        comboHenkiloAktiivisuus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "1.2", "1.375", "1.55", "1.725", "1.9" }));
        comboHenkiloAktiivisuus.setSelectedIndex(3);
        comboHenkiloAktiivisuus.setToolTipText("Valite aktiivisuustaso.\n1.0 - Ei tee mitään (makaa sängyssä koko päivän)\n1.2 - Tosi vähän liikkuu\n1.375 - Kevyt liikunta 1-3 kertaa viikossa\n1.55 - Keskimääräinen liikunta 3-5 kertaa viikossa\n1.725 - Raskas liikunta 6 kertaa viikossa\n1.9 - Duracell pupu");
        comboHenkiloAktiivisuus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHenkiloAktiivisuusActionPerformed(evt);
            }
        });

        textHenkiloAktiivisuusInfo.setEditable(false);
        textHenkiloAktiivisuusInfo.setToolTipText("Näyttää valitus aktiivisuuden tiedot");

        labelHenkiloEnnuste.setText("Ennuste BMR");

        kenttaHenkiloBMR.setEditable(false);
        kenttaHenkiloBMR.setToolTipText("Kertoo ennusteen peruskulutuksesta (koomakulutus)");

        jLabel2.setText("Ennuste kokonais kcal/vrk");

        textHenkiloKokonaisEnnuste.setEditable(false);
        textHenkiloKokonaisEnnuste.setToolTipText("Kertoo ennusteen vuorokauden kokonaiskulutuksesta.");
        textHenkiloKokonaisEnnuste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textHenkiloKokonaisEnnusteActionPerformed(evt);
            }
        });

        buttonHenkiloAktivoitu.setSelected(true);
        buttonHenkiloAktivoitu.setText("Aktivoitu");
        buttonHenkiloAktivoitu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHenkiloAktivoituActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneeliHenkiloTietojenMuokkausLayout = new javax.swing.GroupLayout(paneeliHenkiloTietojenMuokkaus);
        paneeliHenkiloTietojenMuokkaus.setLayout(paneeliHenkiloTietojenMuokkausLayout);
        paneeliHenkiloTietojenMuokkausLayout.setHorizontalGroup(
            paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                        .addComponent(labelHenkilonNimi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kenttaHenkilonNimi, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                                .addComponent(labelHenkilonIka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textHenkiloIka, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelHenkiloSukupuoli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textHenkiloSukupuoli, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textHenkiloPaino, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelHenkiloPituus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textHenkiloPituus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelHenkiloNumero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textHenkiloNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelHenkiloAktiivisuus)
                                    .addComponent(labelHenkiloHuomautus)
                                    .addComponent(labelHenkiloEnnuste))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textHenkiloHuomautus, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                                        .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(kenttaHenkiloBMR, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboHenkiloAktiivisuus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textHenkiloAktiivisuusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(textHenkiloKokonaisEnnuste, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(buttonHenkiloAktivoitu)))))))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        paneeliHenkiloTietojenMuokkausLayout.setVerticalGroup(
            paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneeliHenkiloTietojenMuokkausLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHenkilonNimi)
                    .addComponent(kenttaHenkilonNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHenkilonIka)
                    .addComponent(textHenkiloIka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHenkiloSukupuoli)
                    .addComponent(textHenkiloSukupuoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(textHenkiloPaino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHenkiloPituus)
                    .addComponent(textHenkiloPituus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHenkiloNumero)
                    .addComponent(textHenkiloNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHenkiloHuomautus)
                    .addComponent(textHenkiloHuomautus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHenkiloAktiivisuus)
                    .addComponent(comboHenkiloAktiivisuus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textHenkiloAktiivisuusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelHenkiloEnnuste)
                    .addGroup(paneeliHenkiloTietojenMuokkausLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kenttaHenkiloBMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(textHenkiloKokonaisEnnuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonHenkiloAktivoitu)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolbarHenkiloTiedot, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneeliHenkiloTietojenMuokkaus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toolbarHenkiloTiedot, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paneeliHenkiloTietojenMuokkaus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textHenkiloKokonaisEnnusteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textHenkiloKokonaisEnnusteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textHenkiloKokonaisEnnusteActionPerformed

    private void kenttaHenkilonNimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kenttaHenkilonNimiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kenttaHenkilonNimiActionPerformed

    private void textHenkiloIkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textHenkiloIkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textHenkiloIkaActionPerformed

    private void textHenkiloPainoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textHenkiloPainoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textHenkiloPainoActionPerformed

    private void textHenkiloPituusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textHenkiloPituusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textHenkiloPituusActionPerformed

    private void comboHenkiloAktiivisuusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHenkiloAktiivisuusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboHenkiloAktiivisuusActionPerformed

    private void nappainMuokkaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappainMuokkaaActionPerformed
        /** Aktivoidaan kentät, joita saa muuttaa */
         kenttaHenkilonNimi.setEditable(true);
         textHenkiloIka.setEditable(true);
         textHenkiloPaino.setEditable(true);
         textHenkiloPituus.setEditable(true);
         textHenkiloHuomautus.setEditable(true);
         textHenkiloSukupuoli.setEditable(true);
         comboHenkiloAktiivisuus.setEnabled(true);
         comboHenkiloAktiivisuus.setVisible(true);
         comboHenkiloAktiivisuus.setEditable(true);
         buttonHenkiloAktivoitu.setEnabled(true);
        /** Hävitetään edellinen ja seuraava nappula näkyvistä. */ 
         buttonHenkiloEdellinen.setVisible(false);
         buttonHenkiloSeuraava.setVisible(false);
         /** Hävitetään OK ja UUSI nappulat. */
         henkiloNappainOK.setVisible(false);
         buttonHenkiloUusi.setVisible(false);
         /** Näytetään muutosOK nappula. */ 
         henkiloNappainMuutosOK.setVisible(true);
         henkiloNappainMuutosOK.setEnabled(true);
         
         
        
    }//GEN-LAST:event_nappainMuokkaaActionPerformed

    private void buttonHenkiloEdellinenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHenkiloEdellinenActionPerformed
      
    }//GEN-LAST:event_buttonHenkiloEdellinenActionPerformed

    private void buttonHenkiloSeuraavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHenkiloSeuraavaActionPerformed
       
       
    }//GEN-LAST:event_buttonHenkiloSeuraavaActionPerformed

    private void henkiloNappainOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_henkiloNappainOKActionPerformed
        /** Uuden henkilön syöttäminen */
        /** Tarkistetaan täyttävätkö annettut tiedot ehdot */
        String nimiApu="";
        Boolean sukuPuoliApu=false;
        Boolean henkiloAktiivinenApu=false;
        int ikaApu=0;
        Double painoApu = 0.0;
        Double pituusApu = 0.0; 
        Double aktiivisuusApu = 0.0;
        String huomautusApu="";
         /** Luodaan uusi henkilönumero */
        int suurinHenkiloNumero=1; 
        for (Henkilo e : henkilot) {
          if (e.getHenkiloNumero()>suurinHenkiloNumero) {
             suurinHenkiloNumero=e.getHenkiloNumero();
          } //if
        } //for
        int henkilonumeroApu=suurinHenkiloNumero+1;
        /** Henkilön nimen testaus. */
          if (kenttaHenkilonNimi.getText().length()<2)  {
             JOptionPane.showMessageDialog(null,
           "Henkilön nimen tulee olla vähintään 3 merkkiä!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
          } else { nimiApu=kenttaHenkilonNimi.getText(); }
        /** Henkilön sukupuolen testaus. */
        if (textHenkiloSukupuoli.getText().equals("M")) {
            sukuPuoliApu=false; //sukupuoli mies
        } else {sukuPuoliApu=true; } //sukupuoli nainen
       /** Henkilön iän testaus. */       
        try {
        ikaApu = Integer.parseInt(textHenkiloIka.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Iän tulee olla kokonaisluku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
       /** Henkilön painon testaus. */       
       try {
        painoApu = Double.parseDouble(textHenkiloPaino.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Painon tulee olla pisteellä eroitettu luku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
        /** Henkilön pituuden testaus. */       
       try {
        pituusApu = Double.parseDouble(textHenkiloPituus.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Pituuden tulee olla pisteellä eroitettu luku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
       /** Henkilön aktiivisuuskertoimen valinta. */       
       Object valittuAktiivisuus = comboHenkiloAktiivisuus.getSelectedItem(); 
        if (valittuAktiivisuus == "1.0") {
             aktiivisuusApu = 1.0;
         } //if
         else if (valittuAktiivisuus == "1.2") {
             aktiivisuusApu = 1.2;
         } //else
         else if (valittuAktiivisuus == "1.375") {
             aktiivisuusApu = 1.375;
         } //else
         else if (valittuAktiivisuus == "1.55") {
             aktiivisuusApu = 1.55;
         } //else
         else if (valittuAktiivisuus == "1.725") {
             aktiivisuusApu = 1.725;
         } //else
         else if (valittuAktiivisuus == "1.9") {
             aktiivisuusApu = 1.9;
         } //else
        // aktiivisuustaso //
       
        
        /** Huomautuskentän luenta. */
        huomautusApu = textHenkiloHuomautus.getText();
        /** Onko henkilö astettu aktiiviseksi vai eikö. */
        if (buttonHenkiloAktivoitu.isSelected()) {henkiloAktiivinenApu=true;
        } else {henkiloAktiivinenApu=false;}
        
       /** Päivitetään aktiivisuustasokentän tiedot */
       Double aktiivisuusTaso; 
         aktiivisuusTaso=(henkilot.get(selausHenkilo).getAktiivisuus()); 
         if (aktiivisuusTaso == 1.0) {
             comboHenkiloAktiivisuus.setSelectedIndex(0);
             textHenkiloAktiivisuusInfo.setText("Ei liikuntaa"); 
         } //if
         else if (aktiivisuusTaso == 1.2) {
             comboHenkiloAktiivisuus.setSelectedIndex(1);
             textHenkiloAktiivisuusInfo.setText("Vähän liikuntaa"); 
         } //else
         else if (aktiivisuusTaso == 1.375) {
             comboHenkiloAktiivisuus.setSelectedIndex(2);
             textHenkiloAktiivisuusInfo.setText("1-3 krt/viikko"); 
         } //else
         else if (aktiivisuusTaso == 1.55) {
             comboHenkiloAktiivisuus.setSelectedIndex(3);
             textHenkiloAktiivisuusInfo.setText("3-5 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.725) {
             comboHenkiloAktiivisuus.setSelectedIndex(4);
             textHenkiloAktiivisuusInfo.setText("6 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.9) {
             comboHenkiloAktiivisuus.setSelectedIndex(5);
             textHenkiloAktiivisuusInfo.setText("Hurja liikkuja"); 
         } //else
         /** Varmistetaan ettei tallenneta vahingossa tyhjää. */
         if (nimiApu.length()>2 && ikaApu>0 && painoApu >0 && pituusApu>0 && aktiivisuusApu>0) {
         /** Tiedot ok, nyt ollaan valmiita luomaan olio.*/
         henkilot.add(new Henkilo(nimiApu, sukuPuoliApu, ikaApu, painoApu, pituusApu, 
                 aktiivisuusApu, huomautusApu, henkiloAktiivinenApu, henkilonumeroApu));
          /** Tallennetaan tiedot levylle. */
          Levytoiminta.tallenna(henkilot, henkilotietokanta);
          JOptionPane.showMessageDialog(null,
           "Tiedot lisätty ja tallennettu",
                       "Tiedot tallennettu",
                        JOptionPane.INFORMATION_MESSAGE);
         } else {
                JOptionPane.showMessageDialog(null,
                "Korjaa edellä luetellut virheet ja yritä uudelleen.",
                       "Korjattavaa tiedoissa!",
                        JOptionPane.ERROR_MESSAGE);
         } //else
         
         /** Aktivoidaan nappulat */  
         kenttaHenkilonNimi.setEditable(false);
         textHenkiloIka.setEditable(false);
         textHenkiloPaino.setEditable(false);
         textHenkiloPituus.setEditable(false);
         textHenkiloHuomautus.setEditable(false);
         textHenkiloSukupuoli.setEditable(false);
         comboHenkiloAktiivisuus.setEditable(false);
         buttonHenkiloAktivoitu.setEnabled(false);
        /** Näytetään edellinen ja seuraava nappula näkyvistä. */ 
         buttonHenkiloEdellinen.setVisible(true);
         buttonHenkiloSeuraava.setVisible(true);
         /** Näytetään OK ja UUSI nappulat. */
         henkiloNappainOK.setVisible(true);
         buttonHenkiloUusi.setVisible(true);
         nappainMuokkaa.setVisible(true);
         /** Hävitetään muutosOK nappula. */ 
         henkiloNappainMuutosOK.setVisible(false);
         henkiloNappainMuutosOK.setEnabled(false);
           /** Korostetaan kentän väri */
         kenttaHenkilonNimi.setBackground(Color.WHITE);
         henkiloNappainOK.setVisible(false);
         
         
        
    }//GEN-LAST:event_henkiloNappainOKActionPerformed

    private void nappainPeruutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappainPeruutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nappainPeruutaActionPerformed

    private void buttonHenkiloAktivoituActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHenkiloAktivoituActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonHenkiloAktivoituActionPerformed

    private void buttonHenkiloEdellinenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHenkiloEdellinenMouseClicked
       /** Iteroidaan taulun läpi. */
       if (selausHenkilo>=1 && selausHenkilo<(henkilot.size())) {
            selausHenkilo--;  
       } else {selausHenkilo=0;}
       
         kenttaHenkilonNimi.setText(String.valueOf(henkilot.get(selausHenkilo).getNimi()));
         textHenkiloIka.setText(String.valueOf(henkilot.get(selausHenkilo).getIka()));
         textHenkiloPaino.setText(String.valueOf(henkilot.get(selausHenkilo).getPaino()));
         textHenkiloPituus.setText(String.valueOf(henkilot.get(selausHenkilo).getPituus()));
         textHenkiloNumero.setText(String.valueOf(henkilot.get(selausHenkilo).getHenkiloNumero()));
         textHenkiloHuomautus.setText(String.valueOf(henkilot.get(selausHenkilo).getHuomautus()));
         /** Päivitetään tällä sukupuolikenttää. */
         if (henkilot.get(selausHenkilo).getSukupuoli()==false) {
          textHenkiloSukupuoli.setText("M");             
         } //mies
         else if (henkilot.get(selausHenkilo).getSukupuoli()==true) {
          textHenkiloSukupuoli.setText("N");                 
         } //nainen
         /** Päivitetään tällä aktiivisuustason informaatiokenttää. */
         Double aktiivisuusTaso; 
         comboHenkiloAktiivisuus.setEnabled(false);
         aktiivisuusTaso=(henkilot.get(selausHenkilo).getAktiivisuus()); 
         if (aktiivisuusTaso == 1.0) {
             comboHenkiloAktiivisuus.setSelectedIndex(0);
             textHenkiloAktiivisuusInfo.setText("Ei liikuntaa"); 
         } //if
         else if (aktiivisuusTaso == 1.2) {
             comboHenkiloAktiivisuus.setSelectedIndex(1);
             textHenkiloAktiivisuusInfo.setText("Vähän liikuntaa"); 
         } //else
         else if (aktiivisuusTaso == 1.375) {
             comboHenkiloAktiivisuus.setSelectedIndex(2);
             textHenkiloAktiivisuusInfo.setText("1-3 krt/viikko"); 
         } //else
         else if (aktiivisuusTaso == 1.55) {
             comboHenkiloAktiivisuus.setSelectedIndex(3);
             textHenkiloAktiivisuusInfo.setText("3-5 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.725) {
             comboHenkiloAktiivisuus.setSelectedIndex(4);
             textHenkiloAktiivisuusInfo.setText("6 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.9) {
             comboHenkiloAktiivisuus.setSelectedIndex(5);
             textHenkiloAktiivisuusInfo.setText("Hurja liikkuja"); 
         } //else
         /** Lasketaan ja näytetään ennusteet. */
         Double paino = henkilot.get(selausHenkilo).getPaino();
         Double pituus = henkilot.get(selausHenkilo).getPituus();
         int ika = henkilot.get(selausHenkilo).getIka();
         Boolean sukupuoli = henkilot.get(selausHenkilo).getSukupuoli();
         int BMR = (int) Math.round(Energia.ennusteBMR(paino, pituus, ika, sukupuoli));
         int KCAL = (int) Math.round(Energia.ennusteKokonaisKulutus(paino, pituus, ika, sukupuoli, aktiivisuusTaso));
         kenttaHenkiloBMR.setText(String.valueOf(BMR));
         textHenkiloKokonaisEnnuste.setText(String.valueOf(KCAL));
         /** Näytetään onko henkilö aktiivisena vai poistettu */
         buttonHenkiloAktivoitu.setEnabled(false);
         buttonHenkiloAktivoitu.setSelected(henkilot.get(selausHenkilo).getOnkoAktiivinen());
         buttonHenkiloAktivoitu.setFocusable(henkilot.get(selausHenkilo).getOnkoAktiivinen());
         nappainMuokkaa.setEnabled(true);
         
     
    }//GEN-LAST:event_buttonHenkiloEdellinenMouseClicked

    private void buttonHenkiloSeuraavaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHenkiloSeuraavaMouseClicked
        /** Iteroidaan taulun läpi. */
        if (selausHenkilo>=0 && selausHenkilo<(henkilot.size()-1)) {
             selausHenkilo++;  
         } else { selausHenkilo=0;}
         kenttaHenkilonNimi.setText(String.valueOf(henkilot.get(selausHenkilo).getNimi()));
         textHenkiloIka.setText(String.valueOf(henkilot.get(selausHenkilo).getIka()));
         textHenkiloPaino.setText(String.valueOf(henkilot.get(selausHenkilo).getPaino()));
         textHenkiloPituus.setText(String.valueOf(henkilot.get(selausHenkilo).getPituus()));
         textHenkiloNumero.setText(String.valueOf(henkilot.get(selausHenkilo).getHenkiloNumero()));
         textHenkiloHuomautus.setText(String.valueOf(henkilot.get(selausHenkilo).getHuomautus()));
         /** Päivitetään tällä sukupuolikenttää. */
          if (henkilot.get(selausHenkilo).getSukupuoli()==false) {
          textHenkiloSukupuoli.setText("M");             
         } //mies
         else if (henkilot.get(selausHenkilo).getSukupuoli()==true) {
          textHenkiloSukupuoli.setText("N");                 
         } //nainen
         /** Päivitetään tällä aktiivisuustason informaatiokenttää. */
         Double aktiivisuusTaso; 
         aktiivisuusTaso=(henkilot.get(selausHenkilo).getAktiivisuus()); 
         comboHenkiloAktiivisuus.setEnabled(false);
         if (aktiivisuusTaso == 1.0) {
             comboHenkiloAktiivisuus.setSelectedIndex(0);
             textHenkiloAktiivisuusInfo.setText("Ei liikuntaa"); 
         } //if
         else if (aktiivisuusTaso == 1.2) {
             comboHenkiloAktiivisuus.setSelectedIndex(1);
             textHenkiloAktiivisuusInfo.setText("Vähän liikuntaa"); 
         } //else
         else if (aktiivisuusTaso == 1.375) {
             comboHenkiloAktiivisuus.setSelectedIndex(2);
             textHenkiloAktiivisuusInfo.setText("1-3 krt/viikko"); 
         } //else
         else if (aktiivisuusTaso == 1.55) {
             comboHenkiloAktiivisuus.setSelectedIndex(3);
             textHenkiloAktiivisuusInfo.setText("3-5 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.725) {
             comboHenkiloAktiivisuus.setSelectedIndex(4);
             textHenkiloAktiivisuusInfo.setText("6 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.9) {
             comboHenkiloAktiivisuus.setSelectedIndex(5);
             textHenkiloAktiivisuusInfo.setText("Hurja liikkuja"); 
         } //else
         /** Lasketaan ja näytetään ennusteet. */
         Double paino = henkilot.get(selausHenkilo).getPaino();
         Double pituus = henkilot.get(selausHenkilo).getPituus();
         int ika = henkilot.get(selausHenkilo).getIka();
         Boolean sukupuoli = henkilot.get(selausHenkilo).getSukupuoli();
         int BMR = (int) Math.round(Energia.ennusteBMR(paino, pituus, ika, sukupuoli));
         int KCAL = (int) Math.round(Energia.ennusteKokonaisKulutus(paino, pituus, ika, sukupuoli, aktiivisuusTaso));
         kenttaHenkiloBMR.setText(String.valueOf(BMR));
         textHenkiloKokonaisEnnuste.setText(String.valueOf(KCAL));
         /** Näytetään onko henkilö aktiivisena vai poistettu */
         buttonHenkiloAktivoitu.setEnabled(false);
         buttonHenkiloAktivoitu.setSelected(henkilot.get(selausHenkilo).getOnkoAktiivinen());
         buttonHenkiloAktivoitu.setFocusable(henkilot.get(selausHenkilo).getOnkoAktiivinen());
         nappainMuokkaa.setEnabled(true);
         
       
       
    }//GEN-LAST:event_buttonHenkiloSeuraavaMouseClicked

    private void henkiloNappainMuutosOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_henkiloNappainMuutosOKActionPerformed
       /** Tarkistetaan täyttävätkö annettut tiedot ehdot */
        boolean arvotOK=false; 
        String nimiApu="";
        Boolean sukuPuoliApu=false;
        Boolean henkiloAktiivinenApu=false;
        int ikaApu=0;
        Double painoApu = 0.0;
        Double pituusApu = 0.0; 
        Double aktiivisuusApu = 0.0;
        String huomautusApu="";
        
        /** Henkilön nimen testaus. */
          if (kenttaHenkilonNimi.getText().length()<2)  {
             JOptionPane.showMessageDialog(null,
           "Henkilön nimen tulee olla vähintään 3 merkkiä!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
          } else { nimiApu=kenttaHenkilonNimi.getText(); }
        /** Henkilön sukupuolen testaus. */
        if (textHenkiloSukupuoli.getText().equals("M")) {
            sukuPuoliApu=false; //sukupuoli mies
        } else {sukuPuoliApu=true; } //sukupuoli nainen
       /** Henkilön iän testaus. */       
        try {
        ikaApu = Integer.parseInt(textHenkiloIka.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Iän tulee olla kokonaisluku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
       /** Henkilön painon testaus. */       
       try {
        painoApu = Double.parseDouble(textHenkiloPaino.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Painon tulee olla pisteellä eroitettu luku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
        /** Henkilön pituuden testaus. */       
       try {
        pituusApu = Double.parseDouble(textHenkiloPituus.getText());
       } catch (NumberFormatException nfe) {
          JOptionPane.showMessageDialog(null,
           "Pituuden tulee olla pisteellä eroitettu luku!",
                       "Tiedonsyöttövirhe!",
                        JOptionPane.ERROR_MESSAGE);
       } //catch
       /** Henkilön aktiivisuuskertoimen valinta. */       
       Object valittuAktiivisuus = comboHenkiloAktiivisuus.getSelectedItem(); 
        if (valittuAktiivisuus == "1.0") {
             aktiivisuusApu = 1.0;
         } //if
         else if (valittuAktiivisuus == "1.2") {
             aktiivisuusApu = 1.2;
         } //else
         else if (valittuAktiivisuus == "1.375") {
             aktiivisuusApu = 1.375;
         } //else
         else if (valittuAktiivisuus == "1.55") {
             aktiivisuusApu = 1.55;
         } //else
         else if (valittuAktiivisuus == "1.725") {
             aktiivisuusApu = 1.725;
         } //else
         else if (valittuAktiivisuus == "1.9") {
             aktiivisuusApu = 1.9;
         } //else
        // aktiivisuustaso //
        /** Huomautuskentän luenta. */
        huomautusApu = textHenkiloHuomautus.getText();
        /** Onko henkilö astettu aktiiviseksi vai eikö. */
        if (buttonHenkiloAktivoitu.isSelected()) {henkiloAktiivinenApu=true;
        } else {henkiloAktiivinenApu=false;}
        
        /** Tiedot ok, nyt ollaan valmiita muuttamaan oliota/taulua.*/
         for (Henkilo e : henkilot) {
          /** Valitaan henkilönumeron mukaan varmuuden vuoksi. */    
          if (Objects.equals(e.getHenkiloNumero(), Integer.parseInt(textHenkiloNumero.getText()))) {
                  e.setNimi(nimiApu);
                  e.setSukupuoli(sukuPuoliApu);
                  e.setIka(ikaApu);
                  e.setPaino(painoApu);
                  e.setPituus(pituusApu);
                  e.setAktiivisuusKerroin(aktiivisuusApu);
                  e.setHuomautus(huomautusApu);
                  e.setAktivointi(henkiloAktiivinenApu);
                } //endif
           } //end Tuote for ja jos tänne päästiin, kaikki ok      
       /** Päivitetään aktiivisuustasokentän tiedot */
       Double aktiivisuusTaso; 
         aktiivisuusTaso=(henkilot.get(selausHenkilo).getAktiivisuus()); 
         if (aktiivisuusTaso == 1.0) {
             comboHenkiloAktiivisuus.setSelectedIndex(0);
             textHenkiloAktiivisuusInfo.setText("Ei liikuntaa"); 
         } //if
         else if (aktiivisuusTaso == 1.2) {
             comboHenkiloAktiivisuus.setSelectedIndex(1);
             textHenkiloAktiivisuusInfo.setText("Vähän liikuntaa"); 
         } //else
         else if (aktiivisuusTaso == 1.375) {
             comboHenkiloAktiivisuus.setSelectedIndex(2);
             textHenkiloAktiivisuusInfo.setText("1-3 krt/viikko"); 
         } //else
         else if (aktiivisuusTaso == 1.55) {
             comboHenkiloAktiivisuus.setSelectedIndex(3);
             textHenkiloAktiivisuusInfo.setText("3-5 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.725) {
             comboHenkiloAktiivisuus.setSelectedIndex(4);
             textHenkiloAktiivisuusInfo.setText("6 krt/vko"); 
         } //else
         else if (aktiivisuusTaso == 1.9) {
             comboHenkiloAktiivisuus.setSelectedIndex(5);
             textHenkiloAktiivisuusInfo.setText("Hurja liikkuja"); 
         } //else
         /** Tallennetaan tiedot levylle */
       Levytoiminta.tallenna(henkilot, henkilotietokanta);
           JOptionPane.showMessageDialog(null,
           "Tiedot lisätty ja tallennettu",
                       "Tiedot tallennettu",
                        JOptionPane.INFORMATION_MESSAGE);
         /** Aktivoidaan nappulat */  
         kenttaHenkilonNimi.setEditable(false);
         textHenkiloIka.setEditable(false);
         textHenkiloPaino.setEditable(false);
         textHenkiloPituus.setEditable(false);
         textHenkiloHuomautus.setEditable(false);
         textHenkiloSukupuoli.setEditable(false);
         comboHenkiloAktiivisuus.setEditable(false);
         buttonHenkiloAktivoitu.setEnabled(false);
        /** Näytetään edellinen ja seuraava nappula näkyvistä. */ 
         buttonHenkiloEdellinen.setVisible(true);
         buttonHenkiloSeuraava.setVisible(true);
         /** Näytetään OK ja UUSI nappulat. */
         henkiloNappainOK.setVisible(true);
         buttonHenkiloUusi.setVisible(true);
         /** Hävitetään muutosOK nappula. */ 
         henkiloNappainMuutosOK.setVisible(false);
         henkiloNappainMuutosOK.setEnabled(false);
         comboHenkiloAktiivisuus.setEnabled(false);
        
    }//GEN-LAST:event_henkiloNappainMuutosOKActionPerformed

    private void buttonHenkiloUusiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHenkiloUusiActionPerformed
        /** Uusi henkilö tietokantaan. */
        /** Aktivoidaan nappulat */  
         kenttaHenkilonNimi.setEditable(true);
         textHenkiloIka.setEditable(true);
         textHenkiloPaino.setEditable(true);
         textHenkiloPituus.setEditable(true);
         textHenkiloHuomautus.setEditable(true);
         textHenkiloSukupuoli.setEditable(true);
         comboHenkiloAktiivisuus.setEditable(true);
         comboHenkiloAktiivisuus.setEnabled(true);
         comboHenkiloAktiivisuus.setVisible(true);
         buttonHenkiloAktivoitu.setEnabled(true);
        /** Piilotetaan edellinen ja seuraava nappula näkyvistä. */ 
         buttonHenkiloEdellinen.setVisible(false);
         buttonHenkiloSeuraava.setVisible(false);
         /** Piilotetaan UUSI ja MUOKKAA nappula. */
         buttonHenkiloUusi.setVisible(false);
         nappainMuokkaa.setVisible(false);
          /** Näytetään ja aktivoidaan OK nappula. */
         henkiloNappainOK.setVisible(true);
         henkiloNappainOK.setEnabled(true);
         /** Hävitetään muutosOK nappula. */ 
         henkiloNappainMuutosOK.setVisible(false);
         henkiloNappainMuutosOK.setEnabled(false);
         /** Korostetaan kentän väri */
         kenttaHenkilonNimi.setBackground(Color.YELLOW);
         kenttaHenkilonNimi.setText("Kirjoita henkilön nimi tähän...");
        
    }//GEN-LAST:event_buttonHenkiloUusiActionPerformed

    private void nappainPeruutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nappainPeruutaMouseClicked
        dispose();
    }//GEN-LAST:event_nappainPeruutaMouseClicked

        
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton buttonHenkiloAktivoitu;
    private javax.swing.JButton buttonHenkiloEdellinen;
    private javax.swing.JButton buttonHenkiloSeuraava;
    private javax.swing.JButton buttonHenkiloUusi;
    private javax.swing.JComboBox<String> comboHenkiloAktiivisuus;
    private javax.swing.JButton henkiloNappainMuutosOK;
    private javax.swing.JButton henkiloNappainOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JTextField kenttaHenkiloBMR;
    private javax.swing.JTextField kenttaHenkilonNimi;
    private javax.swing.JLabel labelHenkiloAktiivisuus;
    private javax.swing.JLabel labelHenkiloEnnuste;
    private javax.swing.JLabel labelHenkiloHuomautus;
    private javax.swing.JLabel labelHenkiloNumero;
    private javax.swing.JLabel labelHenkiloPituus;
    private javax.swing.JLabel labelHenkiloSukupuoli;
    private javax.swing.JLabel labelHenkilonIka;
    private javax.swing.JLabel labelHenkilonNimi;
    private javax.swing.JButton nappainMuokkaa;
    private javax.swing.JButton nappainPeruuta;
    private javax.swing.JPanel paneeliHenkiloTietojenMuokkaus;
    private javax.swing.JTextField textHenkiloAktiivisuusInfo;
    private javax.swing.JTextField textHenkiloHuomautus;
    private javax.swing.JTextField textHenkiloIka;
    private javax.swing.JTextField textHenkiloKokonaisEnnuste;
    private javax.swing.JTextField textHenkiloNumero;
    private javax.swing.JTextField textHenkiloPaino;
    private javax.swing.JTextField textHenkiloPituus;
    private javax.swing.JTextField textHenkiloSukupuoli;
    private javax.swing.JToolBar toolbarHenkiloTiedot;
    // End of variables declaration//GEN-END:variables

}
